{"version":3,"sources":["store/contacts/types.ts","hooks/useTypedSelector.ts","store/contacts/reducer.ts","store/modal/types.ts","utils/lsKeys.ts","store/contacts/actions.ts","store/modal/actions.ts","store/combinedCreators.ts","hooks/useActions.ts","components/DeleteContactForm/DeleteContactForm.tsx","components/UpdateContactForm/UpdateContactForm.tsx","components/ContactsList/Contact/Contact.tsx","components/ContactsList/ContactsList.tsx","components/NewContactForm/NewContactForm.tsx","components/Header/Header.tsx","components/Modal/Modal.tsx","App.tsx","store/modal/reducer.ts","store/index.ts","index.tsx"],"names":["ContactsActionTypes","useTypedSelector","useSelector","ModalActionTypes","initialState","contacts","isLoading","error","contactsSelector","state","contactsLSKey","getContactsFromLS","items","localStorage","getItem","JSON","parse","getContacts","dispatch","length","type","types","GET_CONTACTS_SUCCES","payload","GET_CONTACTS","axios","get","then","data","setItem","stringify","catch","GET_CONTACTS_ERROR","createContact","contact","updated","UPDATE_CONTACTS_LIST","deleteContact","pager","filter","updateContact","updatedContact","map","openModal","SHOW_MODAL","hideModal","HIDE_MODAL","combinedCreators","ContactsActionCreators","ModalActionCreators","useActions","useDispatch","bindActionCreators","DeleteContactForm","name","lastname","Form","onSubmit","e","preventDefault","Text","className","Button","variant","onClick","UpdateContactForm","age","useState","fullName","setFullName","String","otherData","setOtherData","submitError","setSubmitError","handleFullName","target","value","id","test","prev","handleOtherData","Object","values","some","f","trim","Number","Group","controlId","Label","Control","placeholder","onChange","Contact","Card","Body","Title","Subtitle","header","body","modalPayload","ContactsList","Container","Row","NewContactForm","Header","Navbar","bg","expand","Brand","href","Modal","isOpen","modal","heading","show","size","aria-labelledby","centered","onHide","closeButton","App","useEffect","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+bAOYA,E,iECJCC,EAAoDC,I,iBDIrDF,K,4BAAAA,E,0CAAAA,E,wCAAAA,E,wCAAAA,M,KEHZ,ICSYG,EDTNC,EAA+B,CACnCC,SAAU,GACVC,WAAW,EACXC,MAAO,IAIIC,EAAmB,SAACC,GAAD,OAAiCA,EAAMJ,SAASA,U,iDEXnEK,EAAgB,WCMvBC,EAAoB,WACxB,IAAMC,EAAQC,aAAaC,QAAQJ,GACnC,OAAKE,EACEG,KAAKC,MAAMJ,GADC,IAIRK,EAAc,kBAAM,SAACC,GAChC,IAAMb,EAAWM,IACbN,EAASc,OACXD,EAAS,CAAEE,KAAMC,EAAMC,oBAAqBC,QAASlB,KAIvDa,EAAS,CAAEE,KAAMC,EAAMG,eAEvBC,IAAMC,IAAmB,aACtBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPf,aAAagB,QAAQnB,EAAeK,KAAKe,UAAUF,EAAKvB,WACxDa,EAAS,CAAEE,KAAMC,EAAMC,oBAAqBC,QAASK,EAAKvB,cAE3D0B,OAAM,WACLb,EAAS,CAAEE,KAAMC,EAAMW,mBAAoBT,QAAS,kCAI7CU,EAAgB,SAACC,GAAD,OAAuB,SAAChB,GACnD,IAAMb,EAAWM,IACXwB,EAAO,sBAAO9B,GAAP,CAAiB6B,IAE9BrB,aAAagB,QAAQnB,EAAeK,KAAKe,UAAUK,IACnDjB,EAAS,CAAEE,KAAMC,EAAMe,qBAAsBb,QAASY,MAG3CE,EAAgB,SAACC,GAAD,OAAmB,SAACpB,GAC/C,IACMiB,EADWxB,IACQ4B,QAAO,SAACL,GAAD,OAAaA,EAAQI,QAAUA,KAE/DzB,aAAagB,QAAQnB,EAAeK,KAAKe,UAAUK,IACnDjB,EAAS,CAAEE,KAAMC,EAAMe,qBAAsBb,QAASY,MAI3CK,EAAgB,SAACF,EAAeG,GAAhB,OAA6C,SAACvB,GACzE,IACMiB,EADWxB,IACQ+B,KAAI,SAACR,GAC5B,OAAIA,EAAQI,QAAUA,EACbG,EAEFP,KAGTrB,aAAagB,QAAQnB,EAAeK,KAAKe,UAAUK,IACnDjB,EAAS,CAAEE,KAAMC,EAAMe,qBAAsBb,QAASY,O,SF7C5ChC,K,wBAAAA,E,yBAAAA,M,KGTL,I,EAAMwC,EAAY,SAACpB,GAAD,OAAkC,SAACL,GAC1DA,EAAS,CAAEE,KAAMC,EAAMuB,WAAYrB,cAExBsB,EAAY,kBAAM,SAAC3B,GAC9BA,EAAS,CAAEE,KAAMC,EAAMyB,eCLZC,EAAgB,2BACxBC,GACAC,GCAQC,EAAa,WACxB,IAAMhC,EAAWiC,cACjB,OAAOC,YAAmBL,EAAkB7B,I,eCGjCmC,EAAiD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUjB,EAAY,EAAZA,MAC/E,EAAqCY,IAA7Bb,EAAR,EAAQA,cAAeQ,EAAvB,EAAuBA,UAOvB,OACE,eAACW,EAAA,EAAD,CAAMC,SANS,SAACC,GAChBA,EAAEC,iBACFtB,EAAcC,GACdO,KAGA,UACE,eAACW,EAAA,EAAKI,KAAN,CAAWC,UAAU,yBAArB,gDAEG,IACAP,EACA,IACAC,EACA,IANH,OASA,cAACO,EAAA,EAAD,CAAQC,QAAQ,UAAU3C,KAAK,SAASyC,UAAU,OAAOG,QAASnB,EAAlE,oBAGA,cAACiB,EAAA,EAAD,CAAQC,QAAQ,YAAY3C,KAAK,SAAjC,gC,eCfO6C,EAAiD,SAAC,GAAiB,IAAf/B,EAAc,EAAdA,QAC/D,EAAqCgB,IAA7BL,EAAR,EAAQA,UAAWL,EAAnB,EAAmBA,cAEjBc,EAIEpB,EAJFoB,KACAC,EAGErB,EAHFqB,SACAW,EAEEhC,EAFFgC,IACA5B,EACEJ,EADFI,MAGF,EAAgC6B,mBAAoB,CAAEb,OAAMC,aAA5D,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAqB,CAAED,IAAKI,OAAOJ,GAAM5B,MAAOgC,OAAOhC,KAAzF,mBAAOiC,EAAP,KAAkBC,EAAlB,KACA,EAAsCL,oBAAkB,GAAxD,mBAAOM,EAAP,KAAoBC,EAApB,KAEMC,EAAiB,SAACjB,GACtB,MAAsBA,EAAEkB,OAAhBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GACD,KAAVD,EAKY,YAAYE,KAAKF,IACpBR,GAAY,SAACW,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,OALnDR,GAAY,SAACW,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,QAQtCI,EAAkB,SAACvB,GACvB,MAAsBA,EAAEkB,OAAhBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GACD,KAAVD,EAKY,YAAYE,KAAKF,IACpBL,GAAa,SAACQ,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,OALpDL,GAAa,SAACQ,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,QA2B7C,OACE,eAACrB,EAAA,EAAD,CAAMC,SApBS,SAACC,GAKhB,GAJAA,EAAEC,iBAEc,sBAAIuB,OAAOC,OAAOf,IAAlB,YAAgCc,OAAOC,OAAOZ,KAAYa,MAAK,SAACC,GAAD,MAA4B,KAAbA,EAAEC,UAG9FZ,GAAe,OADjB,CAIA,IAAMjC,EAA2B,CAC/Ba,KAAMc,EAASd,KACfC,SAAUa,EAASb,SACnBW,IAAKqB,OAAOhB,EAAUL,KACtB5B,MAAOiD,OAAOhB,EAAUjC,QAE1BE,EAAcF,EAAOG,GACrBI,MAIA,UACE,eAACW,EAAA,EAAKgC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,mBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,qBACZf,MAAOT,EAASd,KAChBuC,SAAUlB,IAEZ,cAACnB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,gDAKF,eAACL,EAAA,EAAKgC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,uBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,yBACZf,MAAOT,EAASb,SAChBsC,SAAUlB,IAEZ,cAACnB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,gDAKF,eAACL,EAAA,EAAKgC,MAAN,CAAYC,UAAU,MAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,kBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,MACZf,MAAON,EAAUL,IACjB2B,SAAUZ,IAEZ,cAACzB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,wCAKF,eAACL,EAAA,EAAKgC,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,oBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,QACZf,MAAON,EAAUjC,MACjBuD,SAAUZ,IAEZ,cAACzB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,wCAKDY,GACC,cAACjB,EAAA,EAAKI,KAAN,CAAWC,UAAU,4BAArB,+CAKF,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY3C,KAAK,SAAS4C,QAASnB,EAAWgB,UAAU,OAAxE,oBAGA,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAU3C,KAAK,SAA/B,sBC1HO0E,EAA6B,SAAC,GAAc,IAAZlE,EAAW,EAAXA,KACnCe,EAAcO,IAAdP,UAiBR,OACE,cAACoD,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKE,MAAN,WACGrE,EAAK0B,KACL,IACA1B,EAAK2B,YAER,eAACwC,EAAA,EAAKG,SAAN,CAAerC,UAAU,kBAAzB,iBAEG,IACAjC,EAAKsC,OAER,eAAC6B,EAAA,EAAKnC,KAAN,oBAEG,IACAhC,EAAKU,SAER,cAACwB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA1BZ,WAKlBrB,EAJ0C,CACxCwD,OAAQ,eACRC,KAAM,cAAC,EAAD,CAAmBlE,QAASN,OAuBgBiC,UAAU,OAA1D,0BACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAlCZ,WACpB,IAAMqC,EAAoC,CACxCF,OAAQ,iBACRC,KAAM,cAAC,EAAD,CAAmB9C,KAAM1B,EAAK0B,KAAMC,SAAU3B,EAAK2B,SAAUjB,MAAOV,EAAKU,SAEjFK,EAAU0D,IA6BN,kCC3CKC,EAAmB,WAC9B,IAAMjG,EAAWJ,EAAiBO,GAElC,OACE,cAAC+F,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAK3C,UAAU,yBAAf,SACGxD,EAASqC,KAAI,SAACR,GAAD,OAAa,cAAC,EAAD,CAA6BN,KAAMM,GAArBA,EAAQI,e,QCE5CmE,EAAqB,WAChC,MAAqCvD,IAA7BL,EAAR,EAAQA,UAAWZ,EAAnB,EAAmBA,cAEnB,EAAgCkC,mBAAoB,CAAEb,KAAM,GAAIC,SAAU,KAA1E,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAqB,CAAED,IAAK,GAAI5B,MAAO,KAAzE,mBAAOiC,EAAP,KAAkBC,EAAlB,KACA,EAAsCL,oBAAkB,GAAxD,mBAAOM,EAAP,KAAoBC,EAApB,KAEMC,EAAiB,SAACjB,GACtB,MAAsBA,EAAEkB,OAAhBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GACD,KAAVD,EAKY,YAAYE,KAAKF,IACpBR,GAAY,SAACW,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,OALnDR,GAAY,SAACW,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,QAQtCI,EAAkB,SAACvB,GACvB,MAAsBA,EAAEkB,OAAhBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GACD,KAAVD,EAKY,YAAYE,KAAKF,IACpBL,GAAa,SAACQ,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,OALpDL,GAAa,SAACQ,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAKD,QA0B7C,OACE,eAACrB,EAAA,EAAD,CAAMC,SAnBS,SAACC,GAKhB,GAJAA,EAAEC,iBAEc,sBAAIuB,OAAOC,OAAOf,IAAlB,YAAgCc,OAAOC,OAAOZ,KAAYa,MAAK,SAACC,GAAD,MAA4B,KAAbA,EAAEC,UAG9FZ,GAAe,OADjB,CAIA,IAAMxC,EAAoB,CACxBoB,KAAMc,EAASd,KACfC,SAAUa,EAASb,SACnBW,IAAKqB,OAAOhB,EAAUL,KACtB5B,MAAOiD,OAAOhB,EAAUjC,QAE1BL,EAAcC,GACdW,MAGA,UACE,eAACW,EAAA,EAAKgC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,mBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,qBACZf,MAAOT,EAASd,KAChBuC,SAAUlB,IAEZ,cAACnB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,gDAKF,eAACL,EAAA,EAAKgC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,uBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,yBACZf,MAAOT,EAASb,SAChBsC,SAAUlB,IAEZ,cAACnB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,gDAKF,eAACL,EAAA,EAAKgC,MAAN,CAAYC,UAAU,MAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,kBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,MACZf,MAAON,EAAUL,IACjB2B,SAAUZ,IAEZ,cAACzB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,wCAKF,eAACL,EAAA,EAAKgC,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACjC,EAAA,EAAKkC,MAAN,oBACA,cAAClC,EAAA,EAAKmC,QAAN,CACEvE,KAAK,OACLwE,YAAY,QACZf,MAAON,EAAUjC,MACjBuD,SAAUZ,IAEZ,cAACzB,EAAA,EAAKI,KAAN,CAAWC,UAAU,aAArB,wCAKDY,GACC,cAACjB,EAAA,EAAKI,KAAN,CAAWC,UAAU,4BAArB,+CAKF,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY3C,KAAK,SAAS4C,QAASnB,EAAWgB,UAAU,OAAxE,oBAGA,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAU3C,KAAK,SAA/B,wBCtHOsF,EAAa,WACxB,IAAQ/D,EAAcO,IAAdP,UAUR,OACE,eAACgE,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,sBACA,cAACjD,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAXlB,WAKlBrB,EAJ0C,CACxCwD,OAAQ,kBACRC,KAAM,cAAC,EAAD,OAQN,iC,QCfOY,EAAY,WACvB,IAAQnE,EAAcK,IAAdL,UACFoE,EAAShH,GAAiB,SAACQ,GAAD,OAAWA,EAAMyG,MAAMD,UACjDE,EAAUlH,GAAiB,SAACQ,GAAD,OAAWA,EAAMyG,MAAMf,UAClDC,EAAOnG,GAAiB,SAACQ,GAAD,OAAWA,EAAMyG,MAAMd,QAErD,OACE,eAAC,IAAD,CACEgB,KAAMH,EACNI,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EACRC,OAAQ3E,EALV,UAOE,cAAC,IAAc6D,OAAf,CAAsBe,aAAW,EAAjC,SACE,cAAC,IAAcxB,MAAf,CAAqBnB,GAAG,gCAAxB,SACGqC,MAGL,cAAC,IAAcnB,KAAf,UACGI,QCJMsB,EAfC,WACd,IAAQzG,EAAgBiC,IAAhBjC,YAKR,OAHA0G,qBAAU,WACR1G,MACC,IAED,sBAAK4C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCbAzD,EAA4B,CAChC6G,QAAQ,EACRd,OAAQ,GACRC,KAAM,MCDFwB,EAAcC,aAAe,mBhBKR,YAGJ,WAAkE,IAAjEpH,EAAgE,uDAAxDL,EAAc0H,EAA0C,uCACtF,OAAQA,EAAO1G,MACb,KAAKC,EAAMG,aACT,OAAO,2BACFf,GADL,IAEEH,WAAW,IAEf,KAAKe,EAAMC,oBACT,OAAO,2BACFb,GADL,IAEEH,WAAW,EACXD,SAAUyH,EAAOvG,UAErB,KAAKF,EAAMW,mBACT,OAAO,2BACFvB,GADL,IAEEH,WAAW,EACXC,MAAOuH,EAAOvG,UAElB,KAAKF,EAAMe,qBACT,OAAO,2BACF3B,GADL,IAEEJ,SAAUyH,EAAOvG,UAErB,QACE,OAAOd,MgBjCsB,cDIR,SAEJ,WAA4D,IAA3DA,EAA0D,uDAAlDL,EAAc0H,EAAoC,uCAChF,OAAQA,EAAO1G,MACb,KAAKC,EAAMuB,WACT,OAAO,2BACFnC,GADL,IAEEwG,QAAQ,EACRd,OAAQ2B,EAAOvG,QAAQ4E,OACvBC,KAAM0B,EAAOvG,QAAQ6E,OAEzB,KAAK/E,EAAMyB,WACT,OAAO,2BACFrC,GADL,IAEEwG,QAAQ,EACRd,OAAQ,GACRC,KAAM,OAEV,QACE,OAAO3F,MCvBsB,IAKtBsH,EAAQC,YAAYJ,EAAaK,YAAgBC,MCH9DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.58f3b14f.chunk.js","sourcesContent":["import { IContact } from '../../globalTypes/globalTypes'\r\n\r\nexport interface IContactsState {\r\n  contacts: IContact[]\r\n  isLoading: boolean\r\n  error: string\r\n}\r\nexport enum ContactsActionTypes {\r\n  GET_CONTACTS = 'GET_CONTACTS',\r\n  GET_CONTACTS_SUCCES = 'GET_CONTACTS_SUCCES',\r\n  GET_CONTACTS_ERROR = 'GET_CONTACTS_ERROR',\r\n  UPDATE_CONTACTS_LIST = 'UPDATE_CONTACTS'\r\n}\r\n\r\ninterface IGetContactsAction {\r\n  type: ContactsActionTypes.GET_CONTACTS\r\n}\r\ninterface IGetContactsSuccesAction{\r\n  type: ContactsActionTypes.GET_CONTACTS_SUCCES,\r\n  payload: IContact[]\r\n}\r\ninterface IGetContactsErrorAction {\r\n  type: ContactsActionTypes.GET_CONTACTS_ERROR,\r\n  payload: string\r\n}\r\ninterface IUpdateContactsListAction {\r\n  type: ContactsActionTypes.UPDATE_CONTACTS_LIST,\r\n  payload: IContact[]\r\n}\r\n\r\nexport interface IContactsData {\r\n  contacts: IContact[]\r\n}\r\n\r\nexport type ContactAction =\r\n  IGetContactsAction\r\n  | IGetContactsSuccesAction\r\n  | IGetContactsErrorAction\r\n  | IUpdateContactsListAction\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\r\nimport { RootState } from '../store/index'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import { RootState } from '../index'\r\nimport { IContact } from '../../globalTypes/globalTypes'\r\nimport { IContactsState, ContactAction, ContactsActionTypes as types } from './types'\r\n\r\nconst initialState: IContactsState = {\r\n  contacts: [],\r\n  isLoading: false,\r\n  error: '',\r\n}\r\n\r\nexport const MODULE_NAME = 'contacts'\r\nexport const contactsSelector = (state: RootState):IContact[] => state.contacts.contacts\r\n\r\nexport const reducer = (state = initialState, action: ContactAction): IContactsState => {\r\n  switch (action.type) {\r\n    case types.GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      }\r\n    case types.GET_CONTACTS_SUCCES:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        contacts: action.payload,\r\n      }\r\n    case types.GET_CONTACTS_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      }\r\n    case types.UPDATE_CONTACTS_LIST:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport interface IModalState {\r\n  isOpen: boolean\r\n  header: string\r\n  body: React.ReactNode\r\n}\r\n\r\nexport interface IOnModalOpenPayload {\r\n  header: string\r\n  body: React.ReactChild\r\n}\r\n\r\nexport enum ModalActionTypes {\r\n  SHOW_MODAL = 'SHOW_MODAL',\r\n  HIDE_MODAL = 'HIDE_MODAL',\r\n}\r\n\r\ninterface IShowModalAction {\r\n  type: ModalActionTypes.SHOW_MODAL\r\n  payload: IOnModalOpenPayload\r\n}\r\n\r\ninterface ICloseModalAction {\r\n  type: ModalActionTypes.HIDE_MODAL\r\n}\r\n\r\nexport type ModalAction = IShowModalAction | ICloseModalAction\r\n","export const contactsLSKey = 'contacts'\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux'\r\nimport { IContact } from '../../globalTypes/globalTypes';\r\nimport { ContactAction, ContactsActionTypes as types, IContactsData } from './types'\r\nimport { contactsLSKey } from '../../utils/lsKeys'\r\n\r\nconst getContactsFromLS = (): IContact[] => {\r\n  const items = localStorage.getItem(contactsLSKey)\r\n  if (!items) return []\r\n  return JSON.parse(items)\r\n}\r\n\r\nexport const getContacts = () => (dispatch: Dispatch<ContactAction>): void => {\r\n  const contacts = getContactsFromLS()\r\n  if (contacts.length) {\r\n    dispatch({ type: types.GET_CONTACTS_SUCCES, payload: contacts })\r\n    return\r\n  }\r\n\r\n  dispatch({ type: types.GET_CONTACTS })\r\n\r\n  axios.get<IContactsData>('./db.json')\r\n    .then(({ data }) => {\r\n      localStorage.setItem(contactsLSKey, JSON.stringify(data.contacts))\r\n      dispatch({ type: types.GET_CONTACTS_SUCCES, payload: data.contacts })\r\n    })\r\n    .catch(() => {\r\n      dispatch({ type: types.GET_CONTACTS_ERROR, payload: 'Contacts loading error.' })\r\n    })\r\n}\r\n\r\nexport const createContact = (contact: IContact) => (dispatch: Dispatch<ContactAction>): void => {\r\n  const contacts = getContactsFromLS()\r\n  const updated = [...contacts, contact]\r\n\r\n  localStorage.setItem(contactsLSKey, JSON.stringify(updated))\r\n  dispatch({ type: types.UPDATE_CONTACTS_LIST, payload: updated })\r\n}\r\n\r\nexport const deleteContact = (pager: number) => (dispatch: Dispatch<ContactAction>): void => {\r\n  const contacts = getContactsFromLS()\r\n  const updated = contacts.filter((contact) => contact.pager !== pager)\r\n\r\n  localStorage.setItem(contactsLSKey, JSON.stringify(updated))\r\n  dispatch({ type: types.UPDATE_CONTACTS_LIST, payload: updated })\r\n}\r\n\r\n// eslint-disable-next-line max-len\r\nexport const updateContact = (pager: number, updatedContact: IContact) => (dispatch: Dispatch<ContactAction>): void => {\r\n  const contacts = getContactsFromLS()\r\n  const updated = contacts.map((contact) => {\r\n    if (contact.pager === pager) {\r\n      return updatedContact\r\n    }\r\n    return contact\r\n  })\r\n\r\n  localStorage.setItem(contactsLSKey, JSON.stringify(updated))\r\n  dispatch({ type: types.UPDATE_CONTACTS_LIST, payload: updated })\r\n}\r\n","import { Dispatch } from 'redux'\r\nimport { IOnModalOpenPayload, ModalAction, ModalActionTypes as types } from './types'\r\n\r\n// eslint-disable-next-line max-len\r\nexport const openModal = (payload: IOnModalOpenPayload) => (dispatch: Dispatch<ModalAction>): void => {\r\n  dispatch({ type: types.SHOW_MODAL, payload })\r\n}\r\nexport const hideModal = () => (dispatch: Dispatch<ModalAction>): void => {\r\n  dispatch({ type: types.HIDE_MODAL })\r\n}\r\n","import * as ContactsActionCreators from './contacts/actions'\r\nimport * as ModalActionCreators from './modal/actions'\r\n\r\nexport const combinedCreators = {\r\n  ...ContactsActionCreators,\r\n  ...ModalActionCreators,\r\n}\r\n","import { useDispatch } from 'react-redux'\r\nimport { bindActionCreators, ActionCreatorsMapObject } from 'redux'\r\nimport { combinedCreators } from '../store/combinedCreators'\r\n\r\n// Правильно ли указан return type ? почему - то когда он есть пропадает автокомплит, но ошибок нет.\r\nexport const useActions = (): ActionCreatorsMapObject => {\r\n  const dispatch = useDispatch()\r\n  return bindActionCreators(combinedCreators, dispatch)\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useActions } from '../../hooks/useActions'\r\n\r\ninterface IDeleteContactFormProps {\r\n  name: string\r\n  lastname: string\r\n  pager: number\r\n}\r\n\r\nexport const DeleteContactForm: FC<IDeleteContactFormProps> = ({ name, lastname, pager }) => {\r\n  const { deleteContact, hideModal } = useActions()\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault()\r\n    deleteContact(pager)\r\n    hideModal()\r\n  }\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Form.Text className=\"text-muted delete-text\">\r\n        Are you sure want to delete contact\r\n        {' '}\r\n        {name}\r\n        {' '}\r\n        {lastname}\r\n        {' '}\r\n        ?\r\n      </Form.Text>\r\n      <Button variant=\"success\" type=\"button\" className=\"mr-2\" onClick={hideModal}>\r\n        Cancel\r\n      </Button>\r\n      <Button variant=\"secondary\" type=\"submit\">\r\n        Delete contact\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { FC, useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { IContact } from '../../globalTypes/globalTypes'\r\nimport { useActions } from '../../hooks/useActions'\r\n\r\ninterface IUpdateContactFormProps {\r\n  contact: IContact\r\n}\r\ninterface IFullName {\r\n  name: string,\r\n  lastname: string\r\n}\r\ninterface IOtherData {\r\n  age: string,\r\n  pager: string,\r\n}\r\n\r\nexport const UpdateContactForm: FC<IUpdateContactFormProps> = ({ contact }) => {\r\n  const { hideModal, updateContact } = useActions()\r\n  const {\r\n    name,\r\n    lastname,\r\n    age,\r\n    pager,\r\n  } = contact\r\n\r\n  const [fullName, setFullName] = useState<IFullName>({ name, lastname })\r\n  const [otherData, setOtherData] = useState<IOtherData>({ age: String(age), pager: String(pager) })\r\n  const [submitError, setSubmitError] = useState<boolean>(false)\r\n\r\n  const handleFullName = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value, id } = e.target\r\n    if (value === '') {\r\n      setFullName((prev) => ({ ...prev, [id]: value }))\r\n      return\r\n    }\r\n\r\n    const isValid = /^[a-z]+$/i.test(value)\r\n    if (isValid) setFullName((prev) => ({ ...prev, [id]: value }))\r\n  }\r\n\r\n  const handleOtherData = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value, id } = e.target\r\n    if (value === '') {\r\n      setOtherData((prev) => ({ ...prev, [id]: value }))\r\n      return\r\n    }\r\n\r\n    const isValid = /^[0-9]+$/i.test(value)\r\n    if (isValid) setOtherData((prev) => ({ ...prev, [id]: value }))\r\n  }\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault()\r\n\r\n    const isError = [...Object.values(fullName), ...Object.values(otherData)].some((f: string) => f.trim() === '')\r\n\r\n    if (isError) {\r\n      setSubmitError(true)\r\n      return\r\n    }\r\n    const updatedContact: IContact = {\r\n      name: fullName.name,\r\n      lastname: fullName.lastname,\r\n      age: Number(otherData.age),\r\n      pager: Number(otherData.pager),\r\n    }\r\n    updateContact(pager, updatedContact)\r\n    hideModal()\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter contact name\"\r\n          value={fullName.name}\r\n          onChange={handleFullName}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters is A-Z, a-z.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"lastname\">\r\n        <Form.Label>Lastname</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter contact lastname\"\r\n          value={fullName.lastname}\r\n          onChange={handleFullName}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters is A-Z, a-z.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"age\">\r\n        <Form.Label>Age</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Age\"\r\n          value={otherData.age}\r\n          onChange={handleOtherData}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters 0-9.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"pager\">\r\n        <Form.Label>Pager</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Pager\"\r\n          value={otherData.pager}\r\n          onChange={handleOtherData}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters 0-9.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {submitError && (\r\n        <Form.Text className=\"text-muted warn-text mb-2\">\r\n          Please fill the fields correctly.\r\n        </Form.Text>\r\n      )}\r\n\r\n      <Button variant=\"secondary\" type=\"button\" onClick={hideModal} className=\"mr-2\">\r\n        Cancel\r\n      </Button>\r\n      <Button variant=\"success\" type=\"submit\">\r\n        Save\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Button, Card } from 'react-bootstrap'\r\nimport { IContact } from '../../../globalTypes/globalTypes'\r\nimport { useActions } from '../../../hooks/useActions'\r\nimport { DeleteContactForm } from '../../DeleteContactForm/DeleteContactForm'\r\nimport { IOnModalOpenPayload } from '../../../store/modal/types'\r\nimport { UpdateContactForm } from '../../UpdateContactForm/UpdateContactForm'\r\n\r\ninterface IContactProps {\r\n  data: IContact\r\n}\r\n\r\nexport const Contact: FC<IContactProps> = ({ data }) => {\r\n  const { openModal } = useActions()\r\n\r\n  const deleteHandler = (): void => {\r\n    const modalPayload: IOnModalOpenPayload = {\r\n      header: 'Delete contact',\r\n      body: <DeleteContactForm name={data.name} lastname={data.lastname} pager={data.pager} />,\r\n    }\r\n    openModal(modalPayload)\r\n  }\r\n  const editHandler = (): void => {\r\n    const modalPayload: IOnModalOpenPayload = {\r\n      header: 'Edit contact',\r\n      body: <UpdateContactForm contact={data} />,\r\n    }\r\n    openModal(modalPayload)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>\r\n          {data.name}\r\n          {' '}\r\n          {data.lastname}\r\n        </Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">\r\n          Age:\r\n          {' '}\r\n          {data.age}\r\n        </Card.Subtitle>\r\n        <Card.Text>\r\n          Pager:\r\n          {' '}\r\n          {data.pager}\r\n        </Card.Text>\r\n        <Button variant=\"primary\" onClick={editHandler} className=\"mr-2\">Edit contact</Button>\r\n        <Button variant=\"secondary\" onClick={deleteHandler}>Delete contact</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\r\nimport { contactsSelector } from '../../store/contacts/reducer'\r\nimport { Contact } from './Contact/Contact'\r\n\r\nexport const ContactsList: FC = () => {\r\n  const contacts = useTypedSelector(contactsSelector)\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        {contacts.map((contact) => <Contact key={contact.pager} data={contact} />)}\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { FC, useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { IContact } from '../../globalTypes/globalTypes'\r\n\r\ninterface IFullName {\r\n  name: string,\r\n  lastname: string\r\n}\r\ninterface IOtherData {\r\n  age: string,\r\n  pager: string\r\n}\r\n\r\nexport const NewContactForm: FC = () => {\r\n  const { hideModal, createContact } = useActions()\r\n\r\n  const [fullName, setFullName] = useState<IFullName>({ name: '', lastname: '' })\r\n  const [otherData, setOtherData] = useState<IOtherData>({ age: '', pager: '' })\r\n  const [submitError, setSubmitError] = useState<boolean>(false)\r\n\r\n  const handleFullName = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value, id } = e.target\r\n    if (value === '') {\r\n      setFullName((prev) => ({ ...prev, [id]: value }))\r\n      return\r\n    }\r\n\r\n    const isValid = /^[a-z]+$/i.test(value)\r\n    if (isValid) setFullName((prev) => ({ ...prev, [id]: value }))\r\n  }\r\n\r\n  const handleOtherData = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value, id } = e.target\r\n    if (value === '') {\r\n      setOtherData((prev) => ({ ...prev, [id]: value }))\r\n      return\r\n    }\r\n\r\n    const isValid = /^[0-9]+$/i.test(value)\r\n    if (isValid) setOtherData((prev) => ({ ...prev, [id]: value }))\r\n  }\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault()\r\n\r\n    const isError = [...Object.values(fullName), ...Object.values(otherData)].some((f: string) => f.trim() === '')\r\n\r\n    if (isError) {\r\n      setSubmitError(true)\r\n      return\r\n    }\r\n    const contact: IContact = {\r\n      name: fullName.name,\r\n      lastname: fullName.lastname,\r\n      age: Number(otherData.age),\r\n      pager: Number(otherData.pager),\r\n    }\r\n    createContact(contact)\r\n    hideModal()\r\n  }\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter contact name\"\r\n          value={fullName.name}\r\n          onChange={handleFullName}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters is A-Z, a-z.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"lastname\">\r\n        <Form.Label>Lastname</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter contact lastname\"\r\n          value={fullName.lastname}\r\n          onChange={handleFullName}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters is A-Z, a-z.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"age\">\r\n        <Form.Label>Age</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Age\"\r\n          value={otherData.age}\r\n          onChange={handleOtherData}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters 0-9.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"pager\">\r\n        <Form.Label>Pager</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Pager\"\r\n          value={otherData.pager}\r\n          onChange={handleOtherData}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          Allowed characters 0-9.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {submitError && (\r\n        <Form.Text className=\"text-muted warn-text mb-2\">\r\n          Please fill the fields correctly.\r\n        </Form.Text>\r\n      )}\r\n\r\n      <Button variant=\"secondary\" type=\"button\" onClick={hideModal} className=\"mr-2\">\r\n        Cancel\r\n      </Button>\r\n      <Button variant=\"success\" type=\"submit\">\r\n        Create\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Navbar, Button } from 'react-bootstrap'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { IOnModalOpenPayload } from '../../store/modal/types'\r\nimport { NewContactForm } from '../NewContactForm/NewContactForm'\r\n\r\nexport const Header: FC = () => {\r\n  const { openModal } = useActions()\r\n\r\n  const handleClick = (): void => {\r\n    const modalPayload: IOnModalOpenPayload = {\r\n      header: 'Add new contact',\r\n      body: <NewContactForm />,\r\n    }\r\n    openModal(modalPayload)\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">Contacts</Navbar.Brand>\r\n      <Button variant=\"outline-success\" onClick={handleClick}>Add new contact</Button>\r\n    </Navbar>\r\n  )\r\n}\r\n","import React, { FC } from 'react'\r\nimport { Modal as ModalBootsrap } from 'react-bootstrap'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\r\n\r\nexport const Modal: FC = () => {\r\n  const { hideModal } = useActions()\r\n  const isOpen = useTypedSelector((state) => state.modal.isOpen)\r\n  const heading = useTypedSelector((state) => state.modal.header)\r\n  const body = useTypedSelector((state) => state.modal.body)\r\n\r\n  return (\r\n    <ModalBootsrap\r\n      show={isOpen}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onHide={hideModal}\r\n    >\r\n      <ModalBootsrap.Header closeButton>\r\n        <ModalBootsrap.Title id=\"contained-modal-title-vcenter\">\r\n          {heading}\r\n        </ModalBootsrap.Title>\r\n      </ModalBootsrap.Header>\r\n      <ModalBootsrap.Body>\r\n        {body}\r\n      </ModalBootsrap.Body>\r\n    </ModalBootsrap>\r\n  )\r\n}\r\n","import React, { FC, useEffect } from 'react';\nimport { ContactsList } from './components/ContactsList/ContactsList'\nimport { useActions } from './hooks/useActions';\nimport { Header } from './components/Header/Header'\nimport { Modal } from './components/Modal/Modal'\n\nconst App: FC = () => {\n  const { getContacts } = useActions()\n\n  useEffect(() => {\n    getContacts()\n  }, [])\n  return (\n    <div className=\"app\">\n      <Header />\n      <ContactsList />\n      <Modal />\n    </div>\n  );\n}\n\nexport default App;\n","// import { RootState } from '../index'\r\nimport { IModalState, ModalAction, ModalActionTypes as types } from './types'\r\n\r\nconst initialState: IModalState = {\r\n  isOpen: false,\r\n  header: '',\r\n  body: null,\r\n}\r\n\r\nexport const MODULE_NAME = 'modal'\r\n\r\nexport const reducer = (state = initialState, action:ModalAction): IModalState => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        header: action.payload.header,\r\n        body: action.payload.body,\r\n      }\r\n    case types.HIDE_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        header: '',\r\n        body: null,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { MODULE_NAME as contactsModule, reducer as contactsReducer } from './contacts/reducer'\r\nimport { MODULE_NAME as modalModule, reducer as modalReducer } from './modal/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  [contactsModule]: contactsReducer,\r\n  [modalModule]: modalReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}